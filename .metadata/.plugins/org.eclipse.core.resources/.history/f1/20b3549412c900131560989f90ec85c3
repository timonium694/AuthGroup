package edu.neumont.csc380.hello.service;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.codehaus.jackson.JsonParseException;
import org.codehaus.jackson.map.JsonMappingException;
import org.codehaus.jackson.map.ObjectMapper;
import org.codehaus.jackson.type.TypeReference;

public class UserFactory {

	public ArrayList<User> getUsers() throws JsonMappingException, IOException
	{
		 ArrayList<User> users = new ArrayList<User>();
		 ObjectMapper mapper = new ObjectMapper();
		 File dir = new File("src/main/resources");
		 File[] directoryListing = dir.listFiles();
		 if (directoryListing != null) {
		   for (File child : directoryListing) {
			   User user = mapper.readValue(new File("src/main/resources/"+child.getName()), User.class);
			   users.add(user);
		   }
		 }
		
		return users;
	}
	public Boolean updateUserPass(int id, String newPass) throws JsonMappingException, IOException
	{
		Boolean updated = false;
		User user = null;
		 ObjectMapper mapper = new ObjectMapper();
		 File dir = new File("src/main/resources");
		 File[] directoryListing = dir.listFiles();
		 if (directoryListing != null) {
		   for (File child : directoryListing) {
			   if(Integer.toString(id).equals(child.getName().split("\\.")[0]))
			   {
				   user = mapper.readValue(new File("src/main/resources/"+child.getName()), User.class);
				   user.setPassword(newPass);
				   updated=true;
			   }
		   }
		 }
		 if(updated)
		 {
			 mapper.writeValue("src/main/resources"+id+".json", User.class);
		 
		 }
		return updated;
	}
	public Boolean createNewUser(User u)
	{
		
		return true;
	}
}
