package edu.neumont.csc380.hello.service;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.codehaus.jackson.JsonGenerationException;
import org.codehaus.jackson.JsonParseException;
import org.codehaus.jackson.map.JsonMappingException;
import org.codehaus.jackson.map.ObjectMapper;
import org.codehaus.jackson.type.TypeReference;

public class UserFactory {

	public ArrayList<User> getUsers() throws JsonMappingException, IOException
	{
		 ArrayList<User> users = new ArrayList<User>();
		 ObjectMapper mapper = new ObjectMapper();
		 File dir = new File("src/main/resources");
		 File[] directoryListing = dir.listFiles();
		 if (directoryListing != null) {
		   for (File child : directoryListing) {
			   User user = mapper.readValue(new File("src/main/resources/"+child.getName()), User.class);
			   users.add(user);
		   }
		 }
		
		return users;
	}
	public Boolean updateUserPass(int id, String newPass) throws JsonMappingException, IOException
	{
		Boolean updated = false;

		ObjectMapper mapper = new ObjectMapper();

		User user = null;
		try
		{
			user = mapper.readValue(new File("src/main/resources/"+id+".json"), User.class);
			user.setPassword(newPass);
			updated=true;
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
			
		 if(updated)
		 {
			 mapper.writeValue(new File("src/main/resources"+id+".json"), user);
		 
		 }
		 return updated;
	}
	public Boolean createNewUser(User u)
	{
		Boolean created = false;
		ObjectMapper mapper = new ObjectMapper();
		try {
			mapper.writeValue(new File("src/main/resources"+u.getId()+".json"), u);
			created = true;
		} catch (JsonGenerationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JsonMappingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return  created;
	}
	public String getAuthenticationLevel(int id)
	{
		String output = null;

		ObjectMapper mapper = new ObjectMapper();

		User user = null;
		try
		{
			user = mapper.readValue(new File("src/main/resources/"+id+".json"), User.class);
			output = user.getAuthLevel();
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		
		
		 return output;
	}
	public Boolean deleteUser(int id)
	{
		Boolean deleted = false;
		File f = new File("src/main/resources/"+id+".json");
		f.delete();
		
	}
}
